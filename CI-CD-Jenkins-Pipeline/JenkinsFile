pipeline {
  agent {
    docker {
      image 'kenzieeiy/java-node-git-sonar:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'

    }
  }
  stages {
    stage('Checkout') {
      steps {
        
        git branch: 'main', url: 'https://github.com/Projects-kenz/practice-cicd.git'
      }
    }

    stage('Install Dependencies and Test Backend') {
      steps {
      
        sh 'cd CI-CD-Jenkins-Pipeline/backend && npm install && npm test'
      }
}
   stage('Install Dependencies and Test Frontend') {
      steps {
      
        sh 'cd CI-CD-Jenkins-Pipeline/frontend && npm install && npm test '
      }
    }

stage('Check Java Version') {
  steps {
    sh 'java -version'
  }
}



    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "https://made-fascinating-advocate-metallic.trycloudflare.com"
      }
      steps {
        withCredentials([string(credentialsId: 'SONARQUBE-CRED', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
        cd CI-CD-Jenkins-Pipeline/backend
        sonar-scanner \
          -Dsonar.projectKey=backend \
          -Dsonar.sources=. \
          -Dsonar.host.url=${SONAR_URL} \
          -Dsonar.login=$SONAR_AUTH_TOKEN
      '''
        }
      }
    }

    stage('Build and Push Backend Image') {
      environment {
        DOCKER_IMAGE_BACKEND = "kenzieeiy/mern-cicd-backend:${BUILD_NUMBER}"
        
      }
      steps {
        script {
            sh 'cd CI-CD-Jenkins-Pipeline/backend && docker build -t ${DOCKER_IMAGE_BACKEND} .'
            def dockerImage = docker.image("${DOCKER_IMAGE_BACKEND}")
            docker.withRegistry('https://index.docker.io/v1/', "DOCKERHUB-CRED") {
                dockerImage.push()
            }
        }
      }
    }

  stage('Build and Push Frontend Image') {
      environment {
        DOCKER_IMAGE_FRONTEND = "kenzieeiy/mern-cicd-frontend:${BUILD_NUMBER}"
        
      }
      steps {
        script {
            sh 'cd CI-CD-Jenkins-Pipeline/frontend && docker build -t ${DOCKER_IMAGE_FRONTEND} .'
            def dockerImage = docker.image("${DOCKER_IMAGE_FRONTEND}")
            docker.withRegistry('https://index.docker.io/v1/', "DOCKERHUB-CRED") {
                dockerImage.push()
            }
        }
      }
    }



    stage('Update Backend Deployment File') {
        environment {
            GIT_REPO_NAME = "practice-cicd"
            GIT_USER_NAME = "Projects-kenz"
        }
        steps {
            withCredentials([string(credentialsId: 'GITHUB-CRED', variable: 'GITHUB_TOKEN')]) {
                sh '''
                      echo "Current directory:"
                       pwd
                       echo "Listing files (including hidden):"
                        ls -la
                   if [ -d .git ]; then
                       echo ".git is a directory. Listing .git:"
                   ls -la .git
                  else
                    echo ".git is a file with contents:"
                 cat .git
             fi

        # Try git status to check repo health
        echo "Checking git status:"
        git status || echo "git status failed"

        set -e
                    git config user.email "kenzmazin67@gmail.com"
                    git config user.name "kenzld"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s|image:.*|image: kenzieeiy/mern-cicd-backend:${BUILD_NUMBER}|" CI-CD-Jenkins-Pipeline/k8s/backend-deployment.yaml
                    git add CI-CD-Jenkins-Pipeline/k8s/backend-deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
    stage('Update Frontend Deployment File') {
        environment {
            GIT_REPO_NAME = "practice-cicd"
            GIT_USER_NAME = "Projects-kenz"
        }
        steps {
            withCredentials([string(credentialsId: 'GITHUB-CRED', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    ls -a
                    set -e
                    git config user.email "kenzmazin67@gmail.com"
                    git config user.name "kenzld"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s|image:.*|image: kenzieeiy/mern-cicd-frontend:${BUILD_NUMBER}|" CI-CD-Jenkins-Pipeline/k8s/frontend-deployment.yaml
                    git add CI-CD-Jenkins-Pipeline/k8s/frontend-deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
